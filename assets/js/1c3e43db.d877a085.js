"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3862],{1361:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var n=s(4848),i=s(8453);const l={sidebar_label:"Server",title:"Server | Classes",sidebar_position:1,slug:"/documentation/classes/Server",creatable:!1},t="Server class",a={id:"documentation/Classes/Server",title:"Server | Classes",description:"Properties",source:"@site/docs/documentation/Classes/Server.md",sourceDirName:"documentation/Classes",slug:"/documentation/classes/Server",permalink:"/erlc/docs/documentation/classes/Server",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Server",title:"Server | Classes",sidebar_position:1,slug:"/documentation/classes/Server",creatable:!1},sidebar:"apiSidebar",previous:{title:"Troubleshooting API Errors",permalink:"/erlc/docs/documentation/troubleshooting-api-errors"},next:{title:"Player",permalink:"/erlc/docs/documentation/classes/Player"}},o={},c=[{value:"Properties",id:"properties",level:2},{value:"serverKey",id:"serverkey",level:3},{value:"authorizationKey",id:"authorizationkey",level:3},{value:"name",id:"name",level:3},{value:"ownerID",id:"ownerid",level:3},{value:"coOwnerIDs",id:"coownerids",level:3},{value:"joinCode",id:"joincode",level:3},{value:"verificationType",id:"verificationtype",level:3},{value:"teamBalanceEnabled",id:"teambalanceenabled",level:3},{value:"cache",id:"cache",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor",id:"constructor",level:3},{value:"initiate",id:"initiate",level:3},{value:"makeRequest",id:"makerequest",level:3},{value:"sendCommand",id:"sendcommand",level:3},{value:"getPlayers",id:"getplayers",level:3},{value:"getSpawnedVehicles",id:"getspawnedvehicles",level:3},{value:"getModeratorCalls",id:"getmoderatorcalls",level:3},{value:"getJoinLogs",id:"getjoinlogs",level:3},{value:"getModerationLogs",id:"getmoderationlogs",level:3},{value:"getCustomLogs",id:"getcustomlogs",level:3},{value:"getKillLogs",id:"getkilllogs",level:3}];function d(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Details:s}=r;return s||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"server-class",children:["Server ",(0,n.jsx)("span",{className:"side-note",children:"class"})]}),"\n",(0,n.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["serverKey ",(0,n.jsx)("span",{className:"side-note",children:"string"})]}),(0,n.jsx)(r.h3,{id:"serverkey",children:"serverKey"}),(0,n.jsx)(r.p,{children:"The server's API key"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["authorizationKey ",(0,n.jsx)("span",{className:"side-note",children:"string"})]}),(0,n.jsx)(r.h3,{id:"authorizationkey",children:"authorizationKey"}),(0,n.jsx)(r.p,{children:"The production API key (null if not provided)"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["name ",(0,n.jsx)("span",{className:"side-note",children:"string"})]}),(0,n.jsx)(r.h3,{id:"name",children:"name"}),(0,n.jsx)(r.p,{children:"The name of the Server (null if uninitiated)"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["ownerID ",(0,n.jsx)("span",{className:"side-note",children:"string"})]}),(0,n.jsx)(r.h3,{id:"ownerid",children:"ownerID"}),(0,n.jsx)(r.p,{children:"The user ID of the private server owner (null if uninitiated)"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["coOwnerIDs ",(0,n.jsx)("span",{className:"side-note",children:"string[]"})]}),(0,n.jsx)(r.h3,{id:"coownerids",children:"coOwnerIDs"}),(0,n.jsx)(r.p,{children:"An array of the user ID(s) of the server's co-owner(s) (null if uninitiated)"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["joinCode ",(0,n.jsx)("span",{className:"side-note",children:"string"})]}),(0,n.jsx)(r.h3,{id:"joincode",children:"joinCode"}),(0,n.jsx)(r.p,{children:"The join code of the Server"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["verificationType ",(0,n.jsx)("span",{className:"side-note",children:(0,n.jsx)(r.a,{href:"../Enums/AccountVerificationType",children:"AccountVerificationType"})})]}),(0,n.jsx)(r.h3,{id:"verificationtype",children:"verificationType"}),(0,n.jsx)(r.p,{children:"The level of verification required to join the server (null if uninitiated)"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["teamBalanceEnabled ",(0,n.jsx)("span",{className:"side-note",children:"boolean"})]}),(0,n.jsx)(r.h3,{id:"teambalanceenabled",children:"teamBalanceEnabled"}),(0,n.jsx)(r.p,{children:"If team balance is enabled (null if uninitiated)"})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["cache ",(0,n.jsx)("span",{className:"side-note",children:(0,n.jsx)(r.a,{href:"../Classes/ResponseCache",children:"ResponseCache"})})]}),(0,n.jsx)(r.h3,{id:"cache",children:"cache"}),(0,n.jsx)(r.p,{children:"An object containing the last responses from a method. Should only be used if ratelimited and for rough estimates of the actual values."})]}),"\n",(0,n.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["constructor(key : string, authorizationKey? : string) ",(0,n.jsx)("span",{className:"side-note",children:"returns Server"})]}),(0,n.jsx)(r.h3,{id:"constructor",children:"constructor"}),(0,n.jsx)(r.p,{children:"Creates a Server object with the provided server key and optional authorization key."}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["initiate() ",(0,n.jsx)("span",{className:"side-note",children:"returns Promise<void>"})]}),(0,n.jsx)(r.h3,{id:"initiate",children:"initiate"}),(0,n.jsx)(r.p,{children:"Initiates the server. Fills out information and verifies server exists."}),(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsxs)(r.p,{children:["You can call ",(0,n.jsx)(r.code,{children:".initiate()"})," multiple times on a single ",(0,n.jsx)(r.code,{children:"Server"}),", it'll just update the information."]})}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate().then(() => {\r\n    console.log(`Initiated Server as ${privateServer.name}`)\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["makeRequest(endpoint: string, method?: string, version?: int, data?: object) ",(0,n.jsx)("span",{className:"side-note",children:"returns Promise<Response>"})]}),(0,n.jsx)(r.h3,{id:"makerequest",children:"makeRequest"}),(0,n.jsxs)(r.p,{children:["Make a request to the ER",":LC"," API to the provided endpoint. Providing ",(0,n.jsx)(r.code,{children:"data"})," with the method being ",(0,n.jsx)(r.code,{children:'"GET"'})," or ",(0,n.jsx)(r.code,{children:'"HEAD"'})," will throw an error."]}),(0,n.jsx)(r.p,{children:"You will most likely not need to use this, as currently there are Server methods for every API endpoint."}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.makeRequest(\r\n    "/server/command",\r\n    "POST",\r\n    1,\r\n    {\r\n        command: ":m Hello World!"\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["sendCommand(command: string, args?: string[]) ",(0,n.jsx)("span",{className:"side-note",children:"returns Promise<Response>"})]}),(0,n.jsx)(r.h3,{id:"sendcommand",children:"sendCommand"}),(0,n.jsx)(r.p,{children:"Sends the provided command to the Server, along with the provided arguments."}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.sendCommand("m", ["Hello World!"])\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["getPlayers() ",(0,n.jsxs)("span",{className:"side-note",children:["returns Promise<",(0,n.jsx)(r.a,{href:"./Player",children:"Player"}),"[]>"]})]}),(0,n.jsx)(r.h3,{id:"getplayers",children:"getPlayers"}),(0,n.jsxs)(r.p,{children:["Gets the list of currently online ",(0,n.jsx)(r.a,{href:"./Player",children:"Players"})," in the Server."]}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.getPlayers().then(players => {\r\n    const randomPlayer = players[Math.floor(Math.random() * players.length)]\r\n    console.log(`${randomPlayer.username} won the player bingo!`)\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["getSpawnedVehicles() ",(0,n.jsxs)("span",{className:"side-note",children:["returns Promise<",(0,n.jsx)(r.a,{href:"./Vehicle",children:"Vehicle"}),"[]>"]})]}),(0,n.jsx)(r.h3,{id:"getspawnedvehicles",children:"getSpawnedVehicles"}),(0,n.jsxs)(r.p,{children:["Gets the list of currently spawned ",(0,n.jsx)(r.a,{href:"./Vehicle",children:"Vehicles"})," in the Server."]}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.getSpawnedVehicles().then(vehicles => {\r\n    for(let i = 0; i > vehicles.length; i++){\r\n        console.log(`${vehicles[i].ownerUsername} has a ${vehicles[i].name} spawned!`)\r\n    }\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["getModeratorCalls() ",(0,n.jsxs)("span",{className:"side-note",children:["returns Promise<",(0,n.jsx)(r.a,{href:"./ModeratorCall",children:"ModeratorCall"}),"[]>"]})]}),(0,n.jsx)(r.h3,{id:"getmoderatorcalls",children:"getModeratorCalls"}),(0,n.jsxs)(r.p,{children:["Gets the list of ",(0,n.jsx)(r.a,{href:"./ModeratorCall",children:"ModeratorCalls"})," in the Server."]}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.getModeratorCalls().then(calls => {\r\n    for(let i = 0; i > calls.length; i++){\r\n        console.log(`${calls[i].playerUsername}\'s moderator call was made at ${vehicles[i].date.getHours()}:${vehicles[i].date.getMinutes()}.`)\r\n    }\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["getJoinLogs() ",(0,n.jsxs)("span",{className:"side-note",children:["returns Promise<",(0,n.jsx)(r.a,{href:"../JoinLog",children:"JoinLog"}),"[]>"]})]}),(0,n.jsx)(r.h3,{id:"getjoinlogs",children:"getJoinLogs"}),(0,n.jsxs)(r.p,{children:["Gets the list of ",(0,n.jsx)(r.a,{href:"./JoinLog",children:"JoinLogs"})," from the Server."]}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.getJoinLogs().then(joinLogs => {\r\n    const randomJoinLog = joinLogs[Math.floor(Math.random() * players.length)]\r\n    console.log(`${randomJoinLog.username} won the bingo!`)\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["getModerationLogs() ",(0,n.jsxs)("span",{className:"side-note",children:["returns Promise<",(0,n.jsx)(r.a,{href:"./ModerationLog",children:"ModerationLog"}),"[]>"]})]}),(0,n.jsx)(r.h3,{id:"getmoderationlogs",children:"getModerationLogs"}),(0,n.jsxs)(r.p,{children:["Gets the list of ",(0,n.jsx)(r.a,{href:"./ModerationLog",children:"ModerationLogs"})," from the Server."]}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.getModerationLogs().then(modLogs => {\r\n    console.log(`The most recent mod log was by ${modLogs[0].moderatorUsername}`)\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["getCustomLogs() ",(0,n.jsxs)("span",{className:"side-note",children:["returns Promise<",(0,n.jsx)(r.a,{href:"./ModerationLog",children:"ModerationLog"}),"[]>"]})]}),(0,n.jsx)(r.h3,{id:"getcustomlogs",children:"getCustomLogs"}),(0,n.jsxs)(r.p,{children:["Gets the list of ",(0,n.jsx)(r.a,{href:"./ModerationLog",children:"ModerationLogs"})," where the command equals ",(0,n.jsx)(r.code,{children:'"log"'})," from the Server."]}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.getCustomLogs().then(customLogs => {\r\n    console.log(`The most recent custom log was by ${customLogs[0].moderatorUsername}`)\r\n})\n'})})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsxs)("summary",{children:["getKillLogs() ",(0,n.jsxs)("span",{className:"side-note",children:["returns Promise<",(0,n.jsx)(r.a,{href:"./KillLog",children:"KillLog"}),"[]>"]})]}),(0,n.jsx)(r.h3,{id:"getkilllogs",children:"getKillLogs"}),(0,n.jsxs)(r.p,{children:["Gets the list of ",(0,n.jsx)(r.a,{href:"./KillLog",children:"KillLogs"})," from the Server."]}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const { Server } = require("erlc.js");\r\n\r\nconst privateServer = new Server("SERVER-KEY", "AUTHORIZATION-KEY")\r\nprivateServer.initiate()\r\n\r\nprivateServer.getKillLogs().then(killLogs => {\r\n    for(let i = 0; i > killLogs.length; i++){\r\n        console.log(`${killLogs.killerUsername} killed ${killLogs.killedUsername}!`)\r\n    }\r\n})\n'})})]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>a});var n=s(6540);const i={},l=n.createContext(i);function t(e){const r=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(l.Provider,{value:r},e.children)}}}]);